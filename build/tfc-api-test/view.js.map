{"version":3,"file":"tfc-api-test/view.js","mappings":"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","sources":["webpack://tfc-api-test/./src/tfc-api-test/view.js"],"sourcesContent":["//const allMains = document.querySelectorAll('.main');\n//allMains.forEach(el =>fetchMessages(el));\nlet messageType = \"\";\nlet groupby = \"\";\n\n// determine groupby\nconst groupbyButtons = document.querySelectorAll(\"input[name='groupby-radio']\");\n    \n    groupbyButtons.forEach(button=> {\n    \n    if (button.checked) {\n        groupby = button.value;\n    }\n    // on change fetch messages\n        button.addEventListener('change', function(){\n        if (this.checked) {\n            groupby = this.value;\n            fetchMessages();\n        }\n        //console.log(groupby);\n    })});\n// determing message type\n    const radioButtons = document.querySelectorAll(\"input[name='message-type']\");\n   radioButtons.forEach(radio=> {\n    if (radio.checked) {\n        messageType = radio.value;\n    }\n        radio.addEventListener('change', function(){\n        if (this.checked) {\n            messageType = this.value;\n            fetchMessages();\n        }\n        //console.log(messageType);\n    })});\n    //console.log(groupby);\n    fetchMessages();    \n        \n    \n    \nfunction fetchMessages() {  \n    fetchText();\n} \nasync function fetchText() {\n    \n    const cleanValue = encodeURIComponent(messageType);\n       \n    const resultspromise = await fetch(`/wp-json/wp/v2/message?message-type-slug=${cleanValue}`);\n    const results = await resultspromise.json();\n    // results have json from the API\n    // convert to array so it can be sorted\n    \n    const resultsArray = Object.values(results);\n    // sort results by date_given\n    resultsArray.sort((a, b) => {\n        return b.acf.date_given - a.acf.date_given;\n    });\n    // if groupby speaker resort by speaker last name, first name\n    if (groupby === \"Speaker\") {\n        resultsArray.sort((a, b) => {\n            const speakerA = buildName(a.acf.speaker.name.toLowerCase());\n            const speakerB = buildName(b.acf.speaker.name.toLowerCase());\n            return speakerA.localeCompare(speakerB);\n        });\n    }\n\n    //console.log(resultsArray);\n    // resultsArray is sorted by date descending\n    if(resultsArray.length){\n        //console.log(resultsArray);\n        document.querySelector(\".results\").innerHTML = generateHTML(resultsArray, groupby);\n    }else {\n        document.querySelector(\".results\").innerHTML = \"No Messages Found\";     \n    }\n}\n\nfunction buildName(speaker) {\n    // build name from speaker object\n    nameParts = speaker.split(\" \");\n    firstName = nameParts[0];\n    lastName = nameParts[nameParts.length - 1];\n    sortName = lastName + \" \" + firstName;\n    console.log(sortName);\n    return sortName;\n}\n\nfunction generateHTML(results, groupby) {\n    //console.log(results);\n    let bigHtml = \"\";\n    //php groupby logic\n    let prevGroup = '';\n    let thisGroup = '';\n    let thisYear = '';\n    // groupby div\n\tbigHtml +='<div id=\"groupby-${groupby}\">';\n    \n    // loop through results\n    results.forEach(item => {\n         // Access post data\n        thisYear = new Date(item.acf.date_given).getFullYear();\n        thisSpeaker = buildName(item.acf.speaker.name);\n    if (groupby === \"Year\") {\n        thisGroup = thisYear;\n            }else{thisGroup = thisSpeaker}\n        // see if this is new group to generate header\n        if (prevGroup !== thisGroup) {\n            if (prevGroup !== '') {\n                bigHtml += '</ul>'; // Close previous group if it exists\n                }\n                bigHtml+= `<h4>${thisGroup}</h4><ul class=\"sermon-list grouped-by-${groupby.toLowerCase()} \">`;\n            prevGroup = thisGroup; // Update previous group to current\n        }\n        \n    // end php\n\n    \n        bigHtml += `<div class=\"result-item\">\n            <li><a href=\"${item.link}\">${item.title.rendered}</a>, ${item.acf.speaker.name},  ${new Date(item.acf.date_given).toLocaleString('en-CA', {month: 'short', day: 'numeric', year: 'numeric' })}</li>\n            \n            \n        </div>`;\n        \n\n\n    });\n    bigHtml += '</ul>'; // Close the last group\n    bigHtml += '</div>'; // Close gro\n    return bigHtml;\n}\n"],"names":["messageType","groupby","groupbyButtons","document","querySelectorAll","forEach","button","checked","value","addEventListener","fetchMessages","radioButtons","radio","fetchText","cleanValue","encodeURIComponent","resultspromise","fetch","results","json","resultsArray","Object","values","sort","a","b","acf","date_given","speakerA","buildName","speaker","name","toLowerCase","speakerB","localeCompare","length","querySelector","innerHTML","generateHTML","nameParts","split","firstName","lastName","sortName","console","log","bigHtml","prevGroup","thisGroup","thisYear","item","Date","getFullYear","thisSpeaker","link","title","rendered","toLocaleString","month","day","year"],"sourceRoot":""}